events {
    worker_connections 1024; # Define cuántas conexiones puede manejar el trabajador
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    upstream web_app {
        server web-app:3000;  # Asegúrate de que coincida con el nombre del servicio en docker-compose.yml
    }

    upstream auth_service {
        server auth-service:4000;  # Asegúrate de que coincida con el nombre del servicio en docker-compose.yml
    }

    upstream system_status {
        server system-status:5000;
    }

    server {
        listen 80;

        # Redirigir las solicitudes al microservicio de autenticación
        location /auth {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass_request_headers on; # Asegurarse de reenviar los encabezados
        }

        # Redirigir todas las demás solicitudes a la aplicación web
        location / {
            proxy_pass http://web_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass_request_headers on; # Asegurarse de reenviar los encabezados
        }

        # Redirigir solicitudes al microservicio de estado del sistema
        location /status {
            proxy_pass http://system_status;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass_request_headers on;
        }
    }
}
